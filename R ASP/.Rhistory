#importation du fichier xls
library(gdata)
help(read.xls)
mydata = read.xls("mydata.xls")
library(gdata,perl="C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/RASP)                   # load gdata package
library(gdata,perl="C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/RASP")                   # load gdata package
library(gdata,perl="C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/RASP")
perl="C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/RASP"
#importation du fichier xls
library(gdata)
help(read.xls)
perl="C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/RASP"
#importation du fichier xls
library(gdata)                   # load gdata package
install.packages("xlsx")
library(xlsx)                   # load gdata package
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("rJava", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsxjars", lib.loc="C:/Program Files/R/R-3.1.2/library")
detach("package:xlsxjars", unload=TRUE)
detach("package:xlsx", unload=TRUE)
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="C:/Program Files/R/R-3.1.2/library")
detach("package:rJava", unload=TRUE)
install.packages("mgcv")
library("rJava", lib.loc="C:/Program Files/R/R-3.1.2/library")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="C:/Program Files/R/R-3.1.2/library")
mydata = read.xlsx("C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/R ASP/donnees_mensuelles.xlsx",1)  # read from first sheet
library("rJava", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsxjars", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.2/library")
mydata = read.xlsx("C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/R ASP/donnees_mensuelles.xlsx",1)  # read from first sheet
View(mydata)
View(mydata)
library("rJava", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsxjars", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.2/library")
mydata = read.xlsx("C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/R ASP/donnees_annuelles.xlsx",1)  # read from first sheet
# regression linéraire de IO1 sur IN
res = lm(IO1 ~ IN,data=mydata)
res
View(mydata)
View(mydata)
mydata = read.xlsx("C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/R ASP/donnees_annuelles.xlsx",1)  # read from first sheet
# regression linéraire de IO1 sur IN
res = lm(IO1 ~ IN,data=mydata)
res
View(mydata)
View(mydata)
library("rJava", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsxjars", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.2/library")
mydata = read.xlsx("C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/R ASP/donnees_mensuelles.xlsx",1)  # read from first sheet
# regression linéraire de IO1 sur IN
res = lm(IO1 ~ IN,data=mydata)
res
createINd = function() {
m = matrix(c(rep(c(rep(0,237)),12)),nrow=237,byrow=TRUE)
for (j in 1:12) {
for(i in (j+1):237)
m[i,j]=mydata$IN[i-j]
}
INd = m[25:237,1:12] # on supprime les mois où l'on a pas toutes les données à cause du décallage
return(IO1d)
}
INdm = createINd() # création de la matrice
# création d'une matrice dont les collonnes sont le vecteur IN décalé de l'indice de colonne
createINd = function() {
m = matrix(c(rep(c(rep(0,237)),12)),nrow=237,byrow=TRUE)
for (j in 1:12) {
for(i in (j+1):237)
m[i,j]=mydata$IN[i-j]
}
INd = m[25:237,1:12] # on supprime les mois où l'on a pas toutes les données à cause du décallage
return(INd)
}
INdm = createINd() # création de la matrice
View(INdm)
View(INdm)
IO1d =  mydata$IO1[25:237]# décallage du vecteur pour avoir la bonne taille pour la regréssion
# test de la régression multilinéaire de IO sur l'ensemble des IN : modèle de base sans contraintes sur les coefficiants
res1= lm(IO1d~INdm[1:213,1]+INdm[1:213,2]+INdm[1:213,3]+INdm[1:213,4]+INdm[1:213,5]+INdm[1:213,6]
+INdm[1:213,7]+INdm[1:213,8]+INdm[1:213,9]+INdm[1:213,10]+INdm[1:213,11]+INdm[1:213,12])
summary(res1)
anova(res1)
View(mydata)
View(mydata)
View(INdm)
View(INdm)
createINd = function() {
m = matrix(c(rep(c(rep(0,237)),12)),nrow=237,byrow=TRUE)
for (j in 1:12) {
for(i in (j+1):237)
m[i,j]=mydata$IN[i-j]
}
INd = m[25:237,1:12] # on supprime les mois où l'on a pas toutes les données à cause du décallage
return(m)
}
INdm = createINd() # création de la matrice
View(INdm)
View(INdm)
createINd = function() {
m = matrix(c(rep(c(rep(0,237)),12)),nrow=237,byrow=TRUE)
for (j in 1:12) {
for(i in (j+1):237)
m[i,j]=mydata$IN[i-j]
}
INd = m[13:237,1:12] # on supprime les mois où l'on a pas toutes les données à cause du décallage
return(INd)
}
INdm = createINd() # création de la matrice
View(mydata)
View(mydata)
IO1d =  mydata$IO1[13:237]# décallage du vecteur pour avoir la bonne taille pour la regréssion
+INdm[1:213,7]+INdm[1:213,8]+INdm[1:213,9]+INdm[1:213,10]+INdm[1:213,11]+INdm[1:213,12])
res1= lm(IO1d~INdm[1:213,1]+INdm[1:213,2]+INdm[1:213,3]+INdm[1:213,4]+INdm[1:213,5]+INdm[1:213,6]
+INdm[1:213,7]+INdm[1:213,8]+INdm[1:213,9]+INdm[1:213,10]+INdm[1:213,11]+INdm[1:213,12])
res1= lm(IO1d~INdm[1:225,1]+INdm[1:225,2]+INdm[1:225,3]+INdm[1:225,4]+INdm[1:225,5]+INdm[1:225,6]
+INdm[1:225,7]+INdm[1:225,8]+INdm[1:225,9]+INdm[1:225,10]+INdm[1:225,11]+INdm[1:225,12])
summary(res1)
plot(res1)
library("rJava", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsxjars", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.2/library")
mydata = read.xlsx("C:/Users/Loïc/Documents/Mon travail/Projet stat 2A ENSAE/R ASP/donnees_annuelles.xlsx",1)  # read from first sheet
View(mydata)
View(mydata)
# création d'une matrice dont les collonnes sont le vecteur IN décalé de l'indice de colonne
createINd = function() {
m = matrix(c(rep(c(rep(0,20)),12)),nrow=20,byrow=TRUE)
for (j in 1:12) {
for(i in (j+1):20)
m[i,j]=mydata$IN[i-j]
}
#INd = m[13:237,1:12] # on supprime les mois où l'on a pas toutes les données à cause du décallage
return(m)
}
INdm = createINd() # création de la matrice
View(INdm)
View(INdm)
# création d'une matrice dont les collonnes sont le vecteur IN décalé de l'indice de colonne
createINd = function() {
m = matrix(c(rep(c(rep(0,20)),12)),nrow=20,byrow=TRUE)
for (j in 1:12) {
for(i in (j+1):20)
m[i,j]=mydata$IN[i-j]
}
INd = m[13:20,1:12] # on supprime les mois où l'on a pas toutes les données à cause du décallage
return(m)
}
INdm = createINd() # création de la matrice
View(INdm)
View(INdm)
View(mydata)
return(INd)
}
createINd = function() {
m = matrix(c(rep(c(rep(0,20)),12)),nrow=20,byrow=TRUE)
for (j in 1:12) {
for(i in (j+1):20)
m[i,j]=mydata$IN[i-j]
}
INd = m[13:20,1:12] # on supprime les mois où l'on a pas toutes les données à cause du décallage
return(INd)
}
INdm = createINd() # création de la matrice
View(INdm)
View(INdm)
View(mydata)
View(mydata)
res1= lm(IO1~IN)
IO1=mydata$IO1[2:20]
IN=mydata$IN[1:19]  # on décalle pour pouvoir faire les regressions
res1= lm(IO1~IN)
summary(res1)
INPIB=mydata$IN[1:19]*mydata$PIB[2:20] #même décallage
res2= lm(IO1~INPIB)
summary(INPIB)
summary(res2)
library(rJava,xlsxjars,xlsx)
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "nlme", "nnet", "rpart", "spatial"))
library(rJava,xlsxjars,xlsx)
library(rJava,xlsxjars)
library(xlsx)
mydata = read.xlsx("..//donnees_mensuelles.xlsx",1)  # read from first sheet
install.packages("%")
mydata = read.xlsx(PATH+"/donnees_mensuelles.xlsx",1)  # read from first sheet
mydata = read.xlsx(paste(path,"/donnees_mensuelles.xlsx",sep=""),1)  # read from first sheet
path = sys.getdir()
path = getdir()
library(base)
path = getdir()
path = getwd()
mydata = read.xlsx(paste(path,"/donnees_mensuelles.xlsx",sep=""),1)  # read from first sheet
View(mydata)
# veuillez installer le package xlsx, et activer les packages rJava, xlsxjars et xlsx dans cet ordre pour pouvoir importer les fichiers xlsx
library(rJava,xlsxjars)
library(xlsx)
# importation du fichier xls
path = getwd()
mydata = read.xlsx(paste(path,"/donnees_annuelles.xlsx",sep=""),1)  # read from first sheet
library(rJava,xlsxjars)
library(xlsx)
# importation du fichier xls
path = getwd()
mydata = read.xlsx(paste(path,"/donnees_mensuelles.xlsx",sep=""),1)  # read from first sheet
# regression linéraire de IO1 sur IN
res = lm(IO1 ~ IN,data=mydata)
res
# création d'une matrice dont les collonnes sont le vecteur IN décalé de l'indice de colonne
createINd = function() {
m = matrix(c(rep(c(rep(0,237)),12)),nrow=237,byrow=TRUE)
for (j in 1:12) {
for(i in (j+1):237)
m[i,j]=mydata$IN[i-j]
}
INd = m[13:237,1:12] # on supprime les mois où l'on a pas toutes les données à cause du décallage
return(INd)
}
INdm = createINd() # création de la matrice
IO1d =  mydata$IO1[13:237]# décallage du vecteur pour avoir la bonne taille pour la regréssion
# test de la régression multilinéaire de IO sur l'ensemble des IN : modèle de base sans contraintes sur les coefficiants
res1= lm(IO1d~INdm[1:225,1]+INdm[1:225,2]+INdm[1:225,3]+INdm[1:225,4]+INdm[1:225,5]+INdm[1:225,6]
+INdm[1:225,7]+INdm[1:225,8]+INdm[1:225,9]+INdm[1:225,10]+INdm[1:225,11]+INdm[1:225,12])
summary(res1)
res1= lm(IO1d~INdm[1:225,1]+INdm[1:225,2]+INdm[1:225,3]+INdm[1:225,4]+INdm[1:225,5]+INdm[1:225,6]
+INdm[1:225,7]+INdm[1:225,8]+INdm[1:225,9]+INdm[1:225,10]+INdm[1:225,11]+INdm[1:225,12]-1)
summary(res1)
res2= lm(IO1d~INdm[1:225,1]+INdm[1:225,2]+INdm[1:225,3]+INdm[1:225,4]+INdm[1:225,5]+INdm[1:225,6]
+INdm[1:225,7]+INdm[1:225,8]+INdm[1:225,9]+INdm[1:225,10]+INdm[1:225,11]+INdm[1:225,12]-1)
summary(res2)
plot(res2)
summary(res1)
plot(res1)
